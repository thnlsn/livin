.header {
  grid-column: full-start / col-end 6;

  background-color: rgba($color: $color-secondary, $alpha: 0.93);
  background-blend-mode: multiply;
  background-size: cover;

  display: grid;
  // Using fr in rows works here because the height of the parent is defined
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr; // At least 6rem, but if it overflows, take up however much the min-content needs
  grid-template-columns: minmax(
    min-content,
    max-content
  ); // Never more narrow than content, but at max, let the content extend unwrapped
  grid-row-gap: 1.5rem;
  justify-content: center; // Center the lot of grid elements

  padding: 2rem 8rem 2rem 8rem;

  @media only screen and (max-width: $bp-medium) {
    grid-column: 1 / -1;
    padding: 2rem 8rem 6rem 8rem;
  }

  &__brand {
    height: 3rem;
    display: flex;
    align-items: center;
    grid-gap: 0.5rem;

    justify-self: center; // Center the logo on the top
  }
  &__logo {
    height: 3rem;
  }
  &__link {
    &:link,
    &:visited {
      color: $color-primary;
      font-size: 2.5rem;
      text-decoration: none;
    }
  }

  &__seen-on-text {
    display: grid;
    grid-template-columns: 1fr max-content 1fr; // Max because we don't want the text to wrap
    align-items: center;
    grid-column-gap: 1rem;

    font-size: 1.6rem;
    color: $color-grey-light-2;

    &::before,
    &::after {
      content: '';
      height: 1.5px;
      display: block;
      background-color: currentColor;

      opacity: 0.45;
    }
  }

  &__seen-on-logos {
    display: flex;
    justify-content: space-between;
    opacity: 0.45;

    img {
      // The whole grid width is defined by this because it is the largest grid item
      max-height: 2.5rem;
      max-width: 100%;
    }
  }

  &__btn {
    align-self: start;
    justify-self: start;
  }
}
